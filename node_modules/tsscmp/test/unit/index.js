'use strict';

const assert = require('assert');
const timeSafeCompare = require('../../lib/index');

process.on('uncaughtException', (e) => {
  console.log('caught:', e.message);
});

function testEqual(a, b, description) {
  assert.deepStrictEqual(timeSafeCompare(a, b), true, description);
  assert.deepStrictEqual(a, b, `${description} - parity check`);
}

function testNotEqual(a, b, description) {
  assert.deepStrictEqual(timeSafeCompare(a, b), false, description);
  assert.notDeepStrictEqual(a, b, `${description} - parity check`);
}

const testCases = [
  ['positive',
    { a: '127e6fbfe24a750e72930c220a8e138275656b8e5d8f48a98c3c92df2caba935',
      b: '127e6fbfe24a750e72930c220a8e138275656b8e5d8f48a98c3c92df2caba935'
    }],
  ['positive', { a: 'a', b: 'a' }],
  ['positive', { a: '', b: '' }],
  ['positive', { a: undefined, b: undefined }],
  ['positive', { a: true, b: true }],
  ['positive', { a: false, b: false }],
  ['positive', { a: { a: 1 }, b: { a: 1 } }],
  ['positive', { a: () => 1, b: () => 1 }],
  ['negative', { a: '127e6fbfe24a750e72930c220a8e138275656b8e5d8f48a98c3c92df2caba935',
    b: '127e6fbfe24a750e72930c220a8e138275656b8e5d8f48a98c3c92df2caba935a'
  }],
  ['negative', { a: 'a', b: 'b' }],
  ['negative', { a: 'a', b: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' }],
  ['negative', { a: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',
    b: 'a'
  }],
  ['negative', { a: 'alpha', b: 'beta' }],
  ['negative', { a: false, b: true }],
  ['negative', { a: false, b: undefined }],
  ['negative', { a
