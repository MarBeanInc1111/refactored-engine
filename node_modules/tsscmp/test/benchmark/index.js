'use strict'

// Import the timeSafeCompare function from the ../../lib/index module
var timeSafeCompare = require('../../lib/index')

// Define a function named random that generates a random string of a given length
function random(length) {
  // Set the length to 32 if it is not provided
  length = length || 32
  var result = ""  // Initialize the result variable to store the random string
  var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()-+/*[]{}-=\|;':\"<>?,./"  // Define a string of possible characters for the random string

  for( var i=0; i < length; i++ ) {  // Loop through the length of the random string
    result += possible.charAt(Math.floor(Math.random() * possible.length))  // Add a random character to the result string
  }
  return result  // Return the random string
}

// Define a function named run that runs a benchmark of the timeSafeCompare function with random strings
function run(count) {
  // Set the count to 100,000 if it is not provided
  count = count || 100*1000
  console.log('benchmark count: ' + count/1000 + 'k')  // Log the benchmark count in thousands
  console.time('benchmark')  // Start the benchmark timer

  while(count--){  // Loop through the benchmark count
    timeSafeCompare(random(), random())  // Compare two random strings using the timeSafeCompare function
  }

  console.timeEnd('benchmark')  // End the benchmark timer and log the result
}

// Run the benchmark with a count of 100,000
run(100000)

// Export the run function as a module
module.exports = run;
