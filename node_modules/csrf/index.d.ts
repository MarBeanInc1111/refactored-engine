declare class Tokens {
  /**
   * Token generation/verification class.
   */
  constructor(options?: Tokens.Options);

  /**
   * Create a new CSRF token.
   *
   * @param secret - The secret key to use for generating the token.
   * @returns A new CSRF token.
   */
  static create(secret: string): string;

  /**
   * Create a new secret key.
   *
   * @param callback - A callback function to handle the generated secret key.
   */
  secret(callback: Tokens.SecretCallback): void;

  /**
   * Create a new secret key synchronously.
   *
   * @returns A new secret key.
   */
  secretSync(): string;

  /**
   * Verify if a given token is valid for a given secret.
   *
   * @throws {Error} If the token is invalid.
   * @param secret - The secret key to use for verifying the token.
   * @param token - The token to verify.
   * @returns True if the token is valid, false otherwise.
   */
  static verify(secret: string, token: string): boolean;
}

declare namespace Tokens {
  export type SecretCallback = (err: Error | null, secret: string) => void;

  export type Options
