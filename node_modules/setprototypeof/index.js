'use strict'

// Disables the 'no-proto' rule from ESLint
/* eslint no-proto: 0 */

// Default export function with a more descriptive name
module.exports = setOrMixPrototype

function setOrMixPrototype(obj, proto) {
  // Use Object.setPrototypeOf if available
  if (Object.setPrototypeOf) {
    return Object.setPrototypeOf(obj, proto)
  }

  // Fallback mechanism for setting the prototype of an object
  if ({ __proto__: [] } instanceof Array) {
    return setProto(obj, proto)
  } else {
    return mixinProperties(obj, proto)
  }
}

function setProto(obj, proto) {
  obj.__proto__ = proto
  return obj
}

function mixinProperties(obj, proto) {
  Object.keys(proto).forEach(prop => {
    if (!obj.hasOwnProperty(prop)) {
      obj[prop] = proto[prop]
    }
  })
  return obj
}
