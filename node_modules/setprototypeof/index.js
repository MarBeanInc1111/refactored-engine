'use strict'
/*
Enforces the use of strict mode in JavaScript, which prevents certain actions that can lead to bugs and errors.
*/

/* eslint no-proto: 0 */
/*
Disables the 'no-proto' rule from ESLint, which warns against using the __proto__ property. This property is used in the code to set the prototype of an object.
*/

module.exports = 
/*
Exports a function as the default export of the module. This function serves as a fallback for setting the prototype of an object.
*/
Object.setPrototypeOf || /*
Checks if the Object.setPrototypeOf method is available in the current environment. If it is, this method will be used to set the prototype of an object.
*/
({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)
/*
If Object.setPrototypeOf is not available, a fallback mechanism is used to set the prototype of an object. This fallback mechanism is determined by checking if an array instance has the __proto__ property. If it does, the setProtoOf function is used. Otherwise, the mixinProperties function is used.
*/

function setProtoOf (obj, proto) {
  obj.__proto__ = proto
  return obj
}
/*
Sets the prototype of the obj object to proto. This function is used as a fallback if Object.setPrototypeOf is not available.
*/

function mixinProperties (obj, proto) {
  for (var prop in proto) {
    if (!obj.hasOwnProperty(prop)) {
      obj[prop] = proto[prop]
    }
  }
  return obj
}
/*
Copies the properties of the proto object to the obj object. This function is used as a fallback if Object.setPrototypeOf is not available.
*/
