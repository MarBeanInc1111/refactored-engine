# This is a monolithic application to perform user registration, login, and post creation.

# Import necessary libraries
from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from flask_marshmallow import Marshmallow
import os

# Initialize Flask app
app = Flask(__name__)

# Configure database
basedir = os.path.abspath(os.path.dirname(__file__))
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///' + os.path.join(basedir, 'db.sqlite')
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

# Initialize database and marshmallow
db = SQLAlchemy(app)
ma = Marshmallow(app)

# User class/model
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(100), unique=True)
    password = db.Column(db.String(100))

    def __init__(self, username, password):
        self.username = username
        self.password = password

# User schema
class UserSchema(ma.Schema):
    class Meta:
        fields = ('id', 'username', 'password')

# Initialize user schema
user_schema = UserSchema()
users_schema = UserSchema(many=True)

# Create a user
@app.route('/register', methods=['POST'])
def add_user():
    username = request.json['username']
    password = request.json['password']

    new_user = User(username, password)
    db.session.add(new_user)
    db.session.commit()

    return user_schema.jsonify(new_user)

# Login a user
@app.route('/login', methods=['POST'])
def login_user():
    username = request.json['username']
    password = request.json['password']

    user
